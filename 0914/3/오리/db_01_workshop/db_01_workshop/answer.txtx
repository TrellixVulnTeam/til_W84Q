1. select * from users_user;
User.objects.all()

2. select age from users_user where id=19;
User.objects.filter(pk=19).values('age')

3.  select age from users_user; 
 User.objects.filter().values('age')

4.select id,balance from users_user where age<=40;
User.objects.filter(age__lte=40).values('id','balance')

5.select first_name from users_user where last_name ='김' and balance >=500; 
User.objects.filter(balance__gte=500,last_name='김').values('first_name')

6.select balance from users_user where first_name like '%수' and country ='경기도';
User.objects.filter(first_name__endswith='수',country='경기도').values('balance')

7.select count(*) from users_user  here balance >=2000 or age<=40;
User.objects.filter(Q(balance__gte=2000)|Q(age__lte=40)).count() 

8.select count(*) from users_user where phone like '010%';
User.objects.filter(phone__startswith='010').count()

9.(2줄) update users_user set country ='경기도' where first_name ='옥자' and last_name ='김';
select country from users_user where first_name ='옥자' and last_name ='김'; 
In [22]: user=User.objects.get(first_name='옥자',last_name='김')
In [23]: user.country='경기도'                      
In [24]: user.save()
In [25]: user.country

10. (2줄)delete from users_user where first_name ='진호' and last_name='백';
select * from users_user where first_name='진호'and last_name='백';
User.objects.filter(first_name='진호',last_name='백').delete()

11.select first_name,last_name,balance from users_user order by balance desc limit 4;
In [30]: User.objects.filter().values('first_name','last_name','balance').order_by('-balance')[:4]

12. select * from users_user where phone like '%123%' and age < 30;
User.objects.filter(phone__contains=123,age__lt=30).values() 

13. select distinct country from users_user where phone like '010%';
In [53]: User.objects.filter(phone__startswith='010').values('country').distinct()

14.select avg(age) from users_user;
User.objects.all().aggregate(Avg('age'))

15.select avg(balance) from users_user where last_name ='박';
 User.objects.filter(last_name='박').aggregate(Avg('balance'))

16.select max(balance) from users_user where country ='경상북도';
 User.objects.filter(country='경상북도').aggregate(Max('balance'))

17.select first_name from users_user where country ='제주특별자치도' order by balance desc limit 1; 
 User.objects.filter(country='제주특별자치도').values('first_name').order_by('-balance')[:1]    
파이선 특징 
-인터프리터 언어 - 통역 - 실행속도가 느림개발이빠름  
비교적 느릴수 있지만 바로실행이 가능함 
-컴파일언어- 시언어 번역 - 실행속도가빠름
한줄씩 / 객제지향
동적 타이핑

대화형/ 스크립트형 
idle -대화형
주피터 노트북 

기초문법 

코드 스타일 가이드 
-pep 8 이라는 스타일 가이드 (파이선)--중요
함께 보는 코드의 의미 

들여쓰기 
따옴표의 통일 
띄어쓰기 

pep8 읽어보기.. 

주석 # 
혹은 ''' """ 
docstring이라는 기능 을 위해 사용 
ctrl / 이면 단체 주석 
docstring 함수와 클래스의 설명을 작성 
더큐먼트 스트링 

코드 1줄 1문장 원칙 
문장 - 파이썬이 실행가능한 최소한의 코드 단위 
; 줄바꾸기 로 가능하나 하지 않음 보통 
;- 권장하지 않음 

변수와 식별자 
변수는 할당 연산자를 통해 값을 할당 

정보- 자료 /데이터 변수 리스트 
행동- 계산 함수 연산자 반복문 
정보 + 행동 = 클래스 

type -값의 타입 
id - 고유한 메모리 주소 아이덴티티 
str- 문자열 

할당 연산자 = 
같다가 아님
같은 값을 동시에 할당 가능/ 다른값을 동시에 할당 가능 

값 swap 하는 2가지 방법 
임시 변수를 지정 
순서를 바꿔서 할당 -pythonic 한 방법 

식별자 
변수의 이름의 규칙 
첫글자에 숫자가 올수 없다 
대소문자 구별한다 길이제한이 없다 
키워드 예약어가 되어있을 경우 변수로 사용 불가능함 
import keyword 
print(keyword.kwlist)
내장함수 를 변수로 만들면 본래의 기능이 동작하지 않음

데이터 타입 
숫자 문자열 참거짓 none 
int 정수 인티저 
플로트 플로팅포인트넘버 부동소수점 실수 
컴플렉스 복소수 컴플렉스 넘버 
문자열 스트링 
참거짓 불리언 
넌타입 데이터가 없음 을 정의 

숫자 int  
모든 정수의 타입은 int 

임의 정밀도 산술 
모든 수 표현에 활용 

import sys 
sys.maxsize 922경)

진수표현 

부동소수점 
반올림 오차 에러 / 지수표기법 사용 

isclose -얼마나 가깝니 

복소수 
문자열 

이스케이프 시퀀스 
역슬래쉬 

스트링 인터폴레이션 중요! 
3가지 방법 중 2가지 숙지 

타입변환 

연산자 
//몫 
**제곱 
나눗셈은 결과가 항상 실수 float 
divmod 몫과 나머지 한번에 
int 에서 2.5면 2로 받음 

and / or / not
값이 있으면 true 

5and 4 
5는 트루 4를 봐야됨 
그래서 4가 나옴 
5or3 
5가 트루니까 뒤에꺼안봐도됨 
5 
0and 5이면 
0이 거짓임 그럼 뒤에상관없이 0 임 
5 or 0 이면 
5가 트루니까 뒤에 안봐도됨 
5 
단축평가 

0or 0 이면 앞의0 뒤의 0 ? - 답은 뒤의 0 

포함검사 
in 

아이덴티티 
is 
-5 부터 256까지만 id가 동일 ...

인덱싱 슬라이싱 
% - 나머지

문장- 실행할수 있는 가장 작은 단위 
표현식이 좀더 작은 단위 / 문장보다 

모든 문장은 표현식이 아님 
모든 표현식은 문장임 

표현식은 식별자 값 연산자 3개로 구성 

컨테이너 

리스트 
튜플 

주피터 노트북 
ipynb 파일있는데서 깃배시 하고 
jupyter notebook 치면됨

컨테이너 
-정렬이 되어있다 x 
-순서가 있다 o 

리스트 인덱스 [] 혹은 리스트 함수 
튜플 1개이상이면 뒤에 쉼표가 반드시 와야한다 
레인지 

시퀀스 연산자 포함 테스트 

슬라이싱 
0 1 2 3 그 위치 

문자열- 아스키 코드 

세트 
{  }  >  딕셔너리랑 겹침 하지만 안에들어있는 구조가 다름
list [] 
tuple() 
dictionary{}
set- 세트함수를 통해 반드시 
순서가 없음 별도값에 접근 불가
중복된 값이 존재하지 않음 

딕셔너리 
키는 변경 불가능한 타입만 벨류는 다됨 

변경가능한 데이터 리스트 딕셔너리 셋 3개 

제어문 
control of flow
조건문 
조건식 if 와 else 
들여쓰기 4space 
4space - 1tab 이라고 하면안되지만 설정이 그렇게 됨 
4space 가 맞음 

if a % 2 ==1: 
print ('홀수')
else 
print ('짝수')

nested 중첩 조건문 if가 2개 

조건표현식  뒤쪽에 또 안씀 ))

반복문
2가지 while/ for 

enumerate 인덱스와 원소형태의 튜플 


프로젝트 만들고 이름 hws 
